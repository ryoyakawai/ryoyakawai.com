<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.1.6">Jekyll</generator><link href="https://ryoyakawai.com/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ryoyakawai.com/blog/" rel="alternate" type="text/html" /><updated>2019-06-29T20:45:19+09:00</updated><id>https://ryoyakawai.com/blog/</id><title>Delicious Days</title><subtitle>Life is delicious every day.</subtitle><entry><title>アメリカン中華の代表格？のバーボンチキンを作ってみた</title><link href="https://ryoyakawai.com/blog/2019/06/29/bourbon-chicken.html" rel="alternate" type="text/html" title="アメリカン中華の代表格？のバーボンチキンを作ってみた" /><published>2019-06-29T20:00:00+09:00</published><updated>2019-06-29T20:00:00+09:00</updated><id>https://ryoyakawai.com/blog/2019/06/29/bourbon-chicken</id><content type="html" xml:base="https://ryoyakawai.com/blog/2019/06/29/bourbon-chicken.html">&lt;div&gt; &lt;/div&gt;

&lt;div class=&quot;post-image-center&quot;&gt;
  &lt;img src=&quot;https://ryoyakawai.com/blog/images/2019/06/20190629-bourbonchicken.jpg&quot; width=&quot;60%&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;アメリカン中華の代表格かな？って思ってるバーボンチキン。微妙に焦がすのがポイントな料理。たまに無性に食べたくなるので作ってみました。&lt;br /&gt;
&lt;a href=&quot;http://bit.ly/31S62b4&quot;&gt;もとネタのレシピ&lt;/a&gt;から調味料（特に、砂糖の量！）をアレンジしています。&lt;br /&gt;
もしよかったら作ってみてください！白いご飯に載せて食べると美味しいです😋&lt;/p&gt;

&lt;h3 id=&quot;バーボンチキンアメリカン中華&quot;&gt;バーボンチキン（アメリカン中華？）&lt;/h3&gt;
&lt;div class=&quot;post-image-center&quot;&gt;
&lt;script src=&quot;https://widgets.cookpad.com/recipes/5719021.js?k=5ba150f3&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;/div&gt;</content><category term="Cookpad" /><category term="料理" /><summary></summary></entry><entry><title>Sonic Boom! (Google I/O’19)</title><link href="https://ryoyakawai.com/blog/2019/05/15/sonicboom-googleio.html" rel="alternate" type="text/html" title="Sonic Boom! (Google I/O&#39;19)" /><published>2019-05-15T00:00:00+09:00</published><updated>2019-05-15T00:00:00+09:00</updated><id>https://ryoyakawai.com/blog/2019/05/15/sonicboom-googleio</id><content type="html" xml:base="https://ryoyakawai.com/blog/2019/05/15/sonicboom-googleio.html">&lt;p&gt;&lt;br /&gt;
2019年5月7〜9日まで、毎年Google社が米国カリフォルニア州で開催している開発者会議「Google I/O」に参加してきました。&lt;br /&gt;
&lt;br /&gt;
その中でも&lt;strong&gt;「これは！！」&lt;/strong&gt;と感じたセッションを紹介していこうと思います。
&lt;br /&gt;&lt;br /&gt;
第一弾は&lt;strong&gt;「&lt;a href=&quot;https://events.google.com/io/schedule/events/ad90afc2-bf1f-4318-abc0-d7e8df67bf07&quot;&gt;Sonic Boom! Audio Programming on Android and Chrome&lt;/a&gt;」&lt;/strong&gt;です。&lt;br /&gt;
「Step by StepでAndroid、Webでのコーディング方法を追うことができる」という意味で、開発を行うのには非常に参考になると思っています。&lt;br /&gt;
（&lt;a href=&quot;https://www.digitalhearts.com/&quot;&gt;デジタルハーツ&lt;/a&gt;所属としての参加なのに、アプリケーションテストの内容でなくてごめんなさい😅）
&lt;br /&gt;&lt;br /&gt;
セッションの動画は↓です。&lt;/p&gt;
&lt;div class=&quot;post-image-center&quot; style=&quot;box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);&quot;&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/-GaD0RCp-Q0&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&quot;セッションの概要&quot;&gt;セッションの概要&lt;/h2&gt;
&lt;p&gt;端的に説明すると、UIパーツはそれぞれのプラットフォーム（AndroidとWeb）で開発するものの、オーディオエンジンはC++で書かれたコードを共有して同じアプリを
ライブコーディングで作ってしまう、という内容です。&lt;br /&gt;
C++で書かれたオーディオエンジンを走らせる部分を技術用語で表現すると、&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Android：&lt;a href=&quot;https://ja.wikipedia.org/wiki/Native_development_Kit&quot;&gt;NDK（Native Development Kit）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Web（Chrome）：&lt;a href=&quot;https://ja.wikipedia.org/wiki/WebAssembly&quot;&gt;WebAssembly(WASM)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;で実行することになります。&lt;/p&gt;

&lt;p&gt;それでは、内容を説明してきます。（動画のタイムラインと前後する部分があります）&lt;/p&gt;

&lt;h2 id=&quot;プレゼンター&quot;&gt;プレゼンター&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://events.google.com/io/schedule/events/speakers/6f16d338-6253-4322-a12c-bef1ffb12d0e&quot;&gt;Magnus Berger&lt;/a&gt;：CTO at Propellerhead Software&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://events.google.com/io/schedule/events/speakers/ec237b6e-e701-464f-933e-a3a11324231d&quot;&gt;Hongchan Choi&lt;/a&gt;：Software Engineer(Chrome) at Google&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://events.google.com/io/schedule/events/speakers/364a11ff-ba21-423c-9730-5aa9347c2c29&quot;&gt;Don Turner&lt;/a&gt;：Developer Advocate(Android) at Google&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;背景など&quot;&gt;背景など&lt;/h2&gt;
&lt;p&gt;AndroidとChromeの話を同時にするのは少し奇妙だが以下のような同じ構造だったり、背景があるとのことです。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;システム：Callbackを基本としたオーディオを再生する仕組みを持っている&lt;/li&gt;
  &lt;li&gt;遅延：Audio Latency（往復の）が約20ミリ秒（Pixelデバイス）&lt;/li&gt;
  &lt;li&gt;MIDIサポート：AndroidはMidiManagerAPI、またAndroid QからはハイパフォーマンスなAMidiが搭載され、Chromeでは2015年からWeb MIDI APIでサポートされている&lt;/li&gt;
  &lt;li&gt;Activeユーザー：AndroidもChromeもそれぞれ20億人以上&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そしてこれらの利点を活かしている1つの良い例が&lt;a href=&quot;https://www.bandlab.com/&quot;&gt;BandLab&lt;/a&gt;というマルチプラットフォームで提供されている音楽制作アプリっとのことで
紹介されています。（2:49）&lt;br /&gt;
BandLabはSocial Music Platformで、クロスプラットフォーム（スマホ、Web向け）に提供しており、録音、編集の作業を物理的な場所、プラットフォームを問わず
どこでも行うことが可能。そして作成したデータはクラウドに保存される仕組みです。現在&lt;strong&gt;700万のユーザ&lt;/strong&gt;が登録しており、&lt;strong&gt;200万の曲が毎月&lt;/strong&gt;がこのプラットフォームに
保存されているそうです。&lt;br /&gt;
BandLabが目指す世界は、&lt;strong&gt;どこにいても物理的場所、デバイス、時間等の境界を考えることなく音楽を作ることのできる環境を提供し、
音楽制作を更に民主化すること&lt;/strong&gt;、とのこと。&lt;/p&gt;

&lt;h2 id=&quot;ライブコーディング&quot;&gt;ライブコーディング&lt;/h2&gt;
&lt;p&gt;実装する対象の条件はは以下の通りです。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;オーディオエンジンはC++のコード&lt;a href=&quot;https://github.com/google/oboe&quot;&gt;Oboe&lt;/a&gt;を利用&lt;/li&gt;
  &lt;li&gt;MIDIで操作できるように実装&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、プラットフォームはAndroidとWeb（Chrome）です。&lt;/p&gt;

&lt;p&gt;実装完了しているコードではありませんが、コードが&lt;a href=&quot;https://github.com/googlesamples/io19-sonic-boom&quot;&gt;GitHub&lt;/a&gt;に公開されていますので、
細かく説明するよりもコードを片手に動画を見たほうがわかりやすいと思うので時間を記録していきます。&lt;/p&gt;

&lt;h3 id=&quot;-android側のコーディング&quot;&gt;＊ Android側のコーディング&lt;/h3&gt;
&lt;p&gt;オーディオエンジンを実装 (7:05 - )&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/googlesamples/io19-sonic-boom/blob/master/Android/app/src/main/cpp/AudioEngine.h&quot;&gt;[Android/app/src/main/cpp/AudioEngine.h]&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/googlesamples/io19-sonic-boom/blob/master/Android/app/src/main/cpp/AudioEngine.cpp&quot;&gt;[Android/app/src/main/cpp/AudioEngine.cpp]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;MIDIデバイスと接続 (27:27 - )&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/googlesamples/io19-sonic-boom/blob/master/Android/app/src/main/cpp/AudioEngine.cpp&quot;&gt;[Android/app/src/main/cpp/AudioEngine.cpp]&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/googlesamples/io19-sonic-boom/blob/master/Android/app/src/main/java/com/example/io19/sonicboom/MainActivity.java&quot;&gt;[Android/app/src/main/java/com/example/io19/sonicboom/MainActivity.java]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-ブラウザ側の説明とコーディング&quot;&gt;＊ ブラウザ側の説明とコーディング&lt;/h3&gt;
&lt;p&gt;ここでブラウザとC++で何が起こるのか？についての説明が入ります。(12:15 - )&lt;br /&gt;
先程Android側で実装した&lt;code class=&quot;highlighter-rouge&quot;&gt;Synthesizer.h&lt;/code&gt;を使うけど、これをLLVMベースのコンパイラであるEmscriptenにコンパイルしWeb Assemblyの&lt;code class=&quot;highlighter-rouge&quot;&gt;synthesizer.wasm.js&lt;/code&gt;を生成する。
この&lt;code class=&quot;highlighter-rouge&quot;&gt;synthesizer.wasm.js&lt;/code&gt;は&lt;code class=&quot;highlighter-rouge&quot;&gt;Synthesizer.h&lt;/code&gt;で公開メソッドとして持っていた&lt;code class=&quot;highlighter-rouge&quot;&gt;synth.noteOn()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;synth.noteOff()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;synth.render()&lt;/code&gt;を同じく
公開メソッドとしてして持つことになるが、残念ながらここだけは自動では生成してくれないので&lt;a href=&quot;https://github.com/googlesamples/io19-sonic-boom/blob/master/Chrome/wasm/synth_bind.cc&quot;&gt;EmscriptenでAPIをバインドするC++のコード&lt;/a&gt;を1つ追加することになります。&lt;br /&gt;
&lt;br /&gt;
続いてブラウザ側で鳴らす方法、それはJavaSciptからWeb Audio APIでAudioレンダリングを可能にするAudio Workletを使います。
なお、このAudio Workletはブラウザのメインスレッド上で動作はしないが、メインスレッドと同調して動作するスレッドです。&lt;br /&gt;
具体的には以下の流れで動作をさせることになります。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;synthesizer.wasm.js&lt;/code&gt;をAudio Worklet ProcessorでWrap&lt;/li&gt;
  &lt;li&gt;Audioスレッドで動作している↑とメインスレッドとはPortと呼ばれる仕組みでデータのやり取りを行いブラウザで発声&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
ここからがコーディング。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Wrapしてコンパイル (15:04 - ) &lt;a href=&quot;https://github.com/googlesamples/io19-sonic-boom/blob/master/Chrome/wasm/synth_bind.cc&quot;&gt;[Synthesizer.hをバインドするC++]&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Audio Workletの実装 (17:20 - ) &lt;a href=&quot;https://github.com/googlesamples/io19-sonic-boom/blob/master/Chrome/SynthProcessor.js&quot;&gt;[SynthProcessor.js]&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;メインファイルの実装 (20:39 - ) &lt;a href=&quot;https://github.com/googlesamples/io19-sonic-boom/blob/master/Chrome/index.js&quot;&gt;[index.js]&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;MIDIデバイスと接続する (23:31 - ) &lt;a href=&quot;https://github.com/googlesamples/io19-sonic-boom/blob/master/Chrome/index.js&quot;&gt;[index.js]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;出来上がったところでセッション&quot;&gt;出来上がったところでセッション&lt;/h2&gt;
&lt;p&gt;同じオーディオエンジンで作製したAndroidとWebのアプリでのセッション。(32:05 - )&lt;/p&gt;
&lt;div class=&quot;post-image-center&quot;&gt;
&lt;img src=&quot;https://ryoyakawai.com/blog/images/2019/05/20190515_io19_02.png&quot; /&gt;
&lt;/div&gt;

&lt;h2 id=&quot;事例の紹介&quot;&gt;事例の紹介&lt;/h2&gt;
&lt;p&gt;物理的場所を問わず、どこからでも、誰でも、また共有前提として利用できるプラットフォームであるWeb、
そしてそのプラットフォーム上の音楽制作ツール、とてつもなく大きなコミュニティを持つAndroidが音楽という国境のないツールに対して
音楽制作、またハイエンド・オーディオの分野でどれだけのポテンシャルを持っているか、の裏付けの説明が主でした。&lt;/p&gt;

&lt;h3 id=&quot;propellerhead&quot;&gt;・Propellerhead&lt;/h3&gt;
&lt;p&gt;25年間、音楽向けのアプリを作っている会社でReasonがもっとも知られているソフトウェア。WindowsとmacOS向けのソフトウェアがあり、このソフトウェアシンセサイザをWeb Assenblyを使ってブラウザ上で動作するように移植した。
ブラウザで動くことによって、より多くの人が音を使って自らを表現する機会が増えるといいな、というのが希望がPropellerheadにはあるとのこと。&lt;/p&gt;

&lt;h3 id=&quot;izotopr&quot;&gt;・IZOTOPR&lt;/h3&gt;
&lt;p&gt;信号処理のプラグインを開発する会社であるが、Spire Studioという&lt;strong&gt;モバイルの録音デバイス&lt;/strong&gt;を発売した。
このデバイス向けのAndroidアプリも公開したところ40％売上が上がった。この事実からもAndroidユーザがハイエンドのオーディオハードウェアを手にすることを
求めていることが分かると思う。&lt;/p&gt;

&lt;h3 id=&quot;music-world-media&quot;&gt;・Music World Media&lt;/h3&gt;
&lt;p&gt;数年前にパリで生まれたとても小さい（tiny）Startupで、いろいろなアプリを作っている。
その結果として過去12ヶ月間で235カ国の4500万のAndroidユーザに新規でリーチすることができた。
このことからもAndroidには音楽業界においても多くのユーザにリーチできるポテンシャルを持っていることが証明できていると思う。&lt;/p&gt;

&lt;h3 id=&quot;ableton&quot;&gt;・Ableton&lt;/h3&gt;
&lt;p&gt;Web上での音楽制作ツールは増えてきている。そしてAbletonは&lt;a href=&quot;learningmusic.ableton.com&quot;&gt;音楽制作の教育ツール&lt;/a&gt;を公開している。
ここから市販の制作ツールであるAbleton Liveも学ぶことができる。&lt;/p&gt;

&lt;h2 id=&quot;終わりに&quot;&gt;終わりに&lt;/h2&gt;
&lt;p&gt;まとめです。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;AndroidもWeb（Chrome）の両方がリアルタイムオーディオレンダリング、そしてMIDIサポートが可能&lt;/li&gt;
  &lt;li&gt;AndroidとChromeで同じソースコードを使うことが可能&lt;/li&gt;
  &lt;li&gt;商業的にも、Android、そしてWebから多くのユーザにリーチすることが可能&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;音楽には国境はない。どこにいようとも、文化背景・経済状態がどうであろうとも境界はなく、だからこそ人々が境界なく対話することが可能&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;皆さんのプログラミングスキルでどんな音楽を作ることだってサポートすることが可能&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ということから、聞くだけでなく、それを使ってコミュニケーションをすることをしてきましょう！と締めています。&lt;/p&gt;

&lt;h2 id=&quot;個人的な感想&quot;&gt;個人的な感想&lt;/h2&gt;
&lt;p&gt;C++のコードからWeb Assemblyに移植するのにはヒトテマ必要であることはライブコーディングからは分かりました。
そして「Web Audioでは音楽アプリはレイテンシーが・・・」と指摘されている部分にWeb Assemblyは一石を投じるのも遠い未来ではないように感じる、
同時にWeb Assemblyを使うことは、そこまで難しいことでもないことを感じることができたセッションであった、
という意味では非常に意味のあるセッションだったと感じています。&lt;br /&gt;
&lt;br /&gt;
さてセッションの主役のWeb Assenbly、Web Audio/MIDIの仕様を決めるW3C、その年次会議である&lt;a href=&quot;https://www.w3.org/2019/09/TPAC/&quot;&gt;TPACの2019年開催は日本の福岡&lt;/a&gt;です。
その前後にいろいろなイベントが日本で開催されるかもで、今からワクワクしちゃいますね！&lt;/p&gt;</content><category term="Web Audio API" /><category term="Web MIDI API" /><category term="Web Music" /><category term="Android" /><category term="Google I/O 2019" /><summary>2019年5月7〜9日まで、毎年Google社が米国カリフォルニア州で開催している開発者会議「Google I/O」に参加してきました。

その中でも「これは！！」と感じたセッションを紹介していこうと思います。

第一弾は「Sonic Boom! Audio Programming on Android and Chrome」です。
「Step by StepでAndroid、Webでのコーディング方法を追うことができる」という意味で、開発を行うのには非常に参考になると思っています。
（デジタルハーツ所属としての参加なのに、アプリケーションテストの内容でなくてごめんなさい😅）

セッションの動画は↓です。</summary></entry><entry><title>もやしと豆苗のガパオ風炒め</title><link href="https://ryoyakawai.com/blog/2019/03/31/gapaohuu-itame.html" rel="alternate" type="text/html" title="もやしと豆苗のガパオ風炒め" /><published>2019-03-31T00:00:00+09:00</published><updated>2019-03-31T00:00:00+09:00</updated><id>https://ryoyakawai.com/blog/2019/03/31/gapaohuu-itame</id><content type="html" xml:base="https://ryoyakawai.com/blog/2019/03/31/gapaohuu-itame.html">&lt;div&gt; &lt;/div&gt;

&lt;p&gt;ガパオごはんを作ったときに「この味で野菜炒めにしても美味しいんじゃないかな？」と思い立って作ったらやっぱり美味しかったので、Cookpadにメモりました。
ちょっとエスニックな野菜炒め、という感じかな。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cookpad.com/recipe/5581338&quot;&gt;「もやしと豆苗のガパオ風炒め」のレシピ&lt;/a&gt;はこちらです。&lt;/p&gt;
&lt;div class=&quot;post-image-center&quot;&gt;
&lt;img src=&quot;https://ryoyakawai.com/blog/images/2019/03/20190331-gapao.jpg&quot; width=&quot;60%&quot; /&gt;
&lt;/div&gt;

&lt;div class=&quot;post-image-center&quot;&gt;
&lt;a href=&quot;https://cookpad.com/recipe/5581338&quot;&gt;
&lt;script src=&quot;https://widgets.cookpad.com/recipes/5581338.js?k=6c91e56d&amp;amp;fit_width=1&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&quot;番外編&quot;&gt;番外編&lt;/h2&gt;

&lt;p&gt;ここからはCookpadには載せていませんが、、、&lt;br /&gt;
米国で蕎麦を炒めた料理とかあったけどだいたい微妙な味だけど「この野菜炒めならイケるんじゃないか？」と思って混ぜたのがこちら↓。&lt;/p&gt;

&lt;div class=&quot;post-image-center&quot;&gt;
&lt;img src=&quot;https://ryoyakawai.com/blog/images/2019/03/20190331-soba.jpg&quot; width=&quot;60%&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;味は、、、おすすめ出来ませんww&lt;br /&gt;
食べてて、「蕎麦を炒める」だなんてなんて米国的発想をしてるんだ、、、と自分にビックリでした😅&lt;/p&gt;</content><category term="Cookpad" /><category term="料理" /><summary></summary></entry><entry><title>x-webmidiをES6 Modulesに変更しxwebmidi.jsにしました</title><link href="https://ryoyakawai.com/blog/2019/03/21/update-xwebmidi.html" rel="alternate" type="text/html" title="x-webmidiをES6 Modulesに変更しxwebmidi.jsにしました" /><published>2019-03-21T00:00:00+09:00</published><updated>2019-03-21T00:00:00+09:00</updated><id>https://ryoyakawai.com/blog/2019/03/21/update-xwebmidi</id><content type="html" xml:base="https://ryoyakawai.com/blog/2019/03/21/update-xwebmidi.html">&lt;div&gt; &lt;/div&gt;

&lt;p&gt;x-webmidiとして公開していたPolymerのエレメントをES6 Modulesに変更しxwebmidi.jsとすることにました。&lt;br /&gt;
理由は簡単でHTML ImportがChromeから削除されてしまうからです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ryoyakawai/x-webmidi&quot;&gt;コードはGitHub&lt;/a&gt;にあります。&lt;/p&gt;

&lt;p&gt;xwebmidi.jsでできることは以下です。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;コンピュータに接続されているMIDIデバイスのリスト化&lt;/li&gt;
  &lt;li&gt;接続・切断したMIDIデバイスを自動でデバイスリストから追加・削除&lt;/li&gt;
  &lt;li&gt;MIDI InputデバイスからのMIDIメッセージの受け取り&lt;/li&gt;
  &lt;li&gt;MIDI OutputデバイスへのMIDIメッセージの送信&lt;/li&gt;
  &lt;li&gt;MIDI Messageを自動でParse&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まだあるかもしれませんが、これくらいが主な機能になります。&lt;/p&gt;

&lt;p&gt;できる限り今までのx-webmidiと同じように簡単に実装できるようしています。詳細なREADMEを出来ていませんが、このHTML、JavaScriptを書くとブラウザ上に↑の機能を実装の土台ができあがります。&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./xwebmidi.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    INPUT: &lt;span class=&quot;nt&quot;&gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;midiin&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;xwebmidi-select-midi&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    OUTPUT: &lt;span class=&quot;nt&quot;&gt;&amp;lt;select&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;midiout&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;xwebmidi-select-midi&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/select&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;module&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xWebMIDI&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./xwebmidi.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xwm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xWebMIDI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xwm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;requestMIDIAccess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;xwm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;midiin&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;xwm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initOutput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;midiout&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

       &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;midiin-event:midiin&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;detail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
         &lt;span class=&quot;nx&quot;&gt;xwm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sendRawMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;detail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ということで、快適なWeb Musicな生活を！！！&lt;/p&gt;</content><category term="Web Music" /><category term="Web MIDI API" /><summary></summary></entry><entry><title>Web Bluetooth経由でBluetooth MIDIデバイスを使う</title><link href="https://ryoyakawai.com/blog/2019/02/20/MIDI-over-webbluetooth.html" rel="alternate" type="text/html" title="Web Bluetooth経由でBluetooth MIDIデバイスを使う" /><published>2019-02-20T00:00:00+09:00</published><updated>2019-02-20T00:00:00+09:00</updated><id>https://ryoyakawai.com/blog/2019/02/20/MIDI-over-webbluetooth</id><content type="html" xml:base="https://ryoyakawai.com/blog/2019/02/20/MIDI-over-webbluetooth.html">&lt;div&gt; &lt;/div&gt;

&lt;p&gt;2019年2月19日に&lt;a href=&quot;https://html5j-robot.connpass.com/event/117812/&quot;&gt;「JSで制御するBluetoothと基板の勉強会（html5jロボット部 第11回 勉強会）」&lt;/a&gt;というイベントでBluetooth MIDI機器をWeb Bluetooth経由で利用に関してLTさせていただきました！
久々でとても緊張でしたがデモも無事に動いてホッとしました。制限時間5分のところを1分超過してしまいすみませんでした＞＜&lt;br /&gt;
ありがとうございました！＆スタッフの皆様お疲れ様でした！&lt;/p&gt;

&lt;p&gt;今回の&lt;a href=&quot;https://ryoyakawai.com/apps/midimsgv/&quot;&gt;アプリはこちら&lt;/a&gt;です。&lt;a href=&quot;https://github.com/ryoyakawai/midimessageviewer&quot;&gt;コードはここ&lt;/a&gt;。&lt;br /&gt;
以前作成したアプリをWeb BluetoothでもMIDIに対応してみました。&lt;/p&gt;
&lt;div class=&quot;post-image-center&quot;&gt;
&lt;a href=&quot;https://ryoyakawai.com/apps/midimsgv/&quot;&gt;
&lt;img src=&quot;https://ryoyakawai.com/blog/images/2019/02/20190219_webbluetooth.png&quot; width=&quot;100%&quot; /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;技術的な詳細は&lt;a href=&quot;https://qiita.com/ryoyakawai/items/200b3b05d8bd0096f68d&quot;&gt;Qiitaに記事としてこちら&lt;/a&gt;にまとめたので、気になる方はそちらを御覧ください！気がついたら結局ライブラリにしていたので公開することにしました。ご自由にお使い下さい。&lt;/p&gt;

&lt;p&gt;日進月歩でブラウザでできることが増えて来て本当にうれしいです。&lt;br /&gt;
ウェブって本当にいいですねっ👍&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/sascacci&quot;&gt;@sascacci&lt;/a&gt;さんありがと〜！&lt;/p&gt;</content><category term="Web Music" /><category term="Web Bluetooth" /><category term="MIDI" /><summary></summary></entry><entry><title>旧所属のお世話になったボス「G-tenさん」の定年のご退職壮行会に呼んでいただいた！</title><link href="https://ryoyakawai.com/blog/2019/02/01/farewellparty.html" rel="alternate" type="text/html" title="旧所属のお世話になったボス「G-tenさん」の定年のご退職壮行会に呼んでいただいた！" /><published>2019-02-01T00:00:00+09:00</published><updated>2019-02-01T00:00:00+09:00</updated><id>https://ryoyakawai.com/blog/2019/02/01/farewellparty</id><content type="html" xml:base="https://ryoyakawai.com/blog/2019/02/01/farewellparty.html">&lt;div&gt; &lt;/div&gt;
&lt;p&gt;「こんにちは」&lt;br /&gt;
という元所属の上司からの1日前のFacebookのメッセンジャから始まった。 &lt;br /&gt;
スクリプトがうまく動かなくて「う〜ん、、、」と頭を抱えながらお昼ご飯を食べているときに気がついたメッセージで、スクリプトから意識を離してもらえたのでその点も本当によかったです。さすが元上司、みたいなw&lt;/p&gt;

&lt;p&gt;そして、そのメッセージを雑にまとめると「明日来ない？」みたいなありがたいお誘い。旧所属の人が20名規模で集まり、上司の上司（当時の部門長）のご定年の壮行会、ということで2つ返事で「参加します！」と即刻返事をして混ぜてもらいました。印象的な期間の1つである部門だったので会場に入った途端にタイムスリップした感がかなりあって、さらには会場のプロジェクタからは選んだかのように「Back to the future -Part1-」が再生されてて、もうなんというかホントに当時のことが頭の中を駆け巡り、控え目に言って楽しかった。そして、あの選択でなくてこういう選択してたらもっと伸びてたかも、とか頭をよぎったり、普段は感じられない貴重で、かつ、不思議な時間が過ぎました。その時間は本当に一瞬で終わってしまいましたけどね。&lt;br /&gt;
さて、今回の壮行会の主役のボスは本当に印象的なボスの1人で&lt;/p&gt;
&lt;div class=&quot;post-image-center&quot; style=&quot;font-weight:bold&quot;&gt;
「成功体験は減価償却せなあかんで。」
&lt;/div&gt;
&lt;p&gt;と、今でも常に心に留めている言葉を教えてくださった関西弁のボスです。今後の変わらぬご活躍を祈念するのと同時に、部下として乗り越える一翼を担えたことを嬉しく思います！ありがとうございました！！&lt;br /&gt;
そして、今回のG-tenさん（ボス）の一言&lt;/p&gt;
&lt;div class=&quot;post-image-center&quot; style=&quot;font-weight:bold&quot;&gt;
「突き詰めていくと、最後は好き嫌いやで。」
&lt;/div&gt;
&lt;p&gt;と、また深いお言葉。何となくしかまだ理解はできていないんだけど「そうなんだよね」、「それでいいんだよね」みたいに感じました。この言葉もこれから心から理解できるように精進していこうと思います。&lt;/p&gt;

&lt;div class=&quot;post-image-center&quot;&gt;
  &lt;img src=&quot;https://ryoyakawai.com/blog/images/2019/02/20190201-groupphoto.jpg&quot; width=&quot;60%&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;そして、今回は1参加者のつもりだったのが、僕まで壮行されれる側にしていただけました。本当にありがとうございました。嬉しかったです。更にこんな素敵などんぶりまで記念品としていただいちゃいました！あの当時なら確実に「白米用」でしたが、これからは「スープ」または「ヨーグルト」用として使わせていただきますっ！ありがとうございます。&lt;/p&gt;

&lt;div class=&quot;post-image-center&quot;&gt;
  &lt;img src=&quot;https://ryoyakawai.com/blog/images/2019/02/20190201-donburi.jpg&quot; width=&quot;60%&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;さて、未来に向けて引き続き一歩一歩着実に前進していくよっ！&lt;/p&gt;</content><category term="壮行会" /><category term="FarewellParty" /><summary>「こんにちは」
という元所属の上司からの1日前のFacebookのメッセンジャから始まった。 
スクリプトがうまく動かなくて「う〜ん、、、」と頭を抱えながらお昼ご飯を食べているときに気がついたメッセージで、スクリプトから意識を離してもらえたのでその点も本当によかったです。さすが元上司、みたいなw

そして、そのメッセージを雑にまとめると「明日来ない？」みたいなありがたいお誘い。旧所属の人が20名規模で集まり、上司の上司（当時の部門長）のご定年の壮行会、ということで2つ返事で「参加します！」と即刻返事をして混ぜてもらいました。印象的な期間の1つである部門だったので会場に入った途端にタイムスリップした感がかなりあって、さらには会場のプロジェクタからは選んだかのように「Back to the future -Part1-」が再生されてて、もうなんというかホントに当時のことが頭の中を駆け巡り、控え目に言って楽しかった。そして、あの選択でなくてこういう選択してたらもっと伸びてたかも、とか頭をよぎったり、普段は感じられない貴重で、かつ、不思議な時間が過ぎました。その時間は本当に一瞬で終わってしまいましたけどね。
さて、今回の壮行会の主役のボスは本当に印象的なボスの1人で

「成功体験は減価償却せなあかんで。」

と、今でも常に心に留めている言葉を教えてくださった関西弁のボスです。今後の変わらぬご活躍を祈念するのと同時に、部下として乗り越える一翼を担えたことを嬉しく思います！ありがとうございました！！
そして、今回のG-tenさん（ボス）の一言

「突き詰めていくと、最後は好き嫌いやで。」

と、また深いお言葉。何となくしかまだ理解はできていないんだけど「そうなんだよね」、「それでいいんだよね」みたいに感じました。この言葉もこれから心から理解できるように精進していこうと思います。</summary></entry><entry><title>パンダエクスプレスメニューのコピーを作ってみた</title><link href="https://ryoyakawai.com/blog/2019/01/20/pandaexpressrecipe.html" rel="alternate" type="text/html" title="パンダエクスプレスメニューのコピーを作ってみた" /><published>2019-01-20T00:00:00+09:00</published><updated>2019-01-20T00:00:00+09:00</updated><id>https://ryoyakawai.com/blog/2019/01/20/pandaexpressrecipe</id><content type="html" xml:base="https://ryoyakawai.com/blog/2019/01/20/pandaexpressrecipe.html">&lt;div&gt; &lt;/div&gt;

&lt;p&gt;たまに食べたくなるパンダエクスプレスメニュー。作ってみたら、けっこう美味しくできたのでCookpadに公開しちゃいました。&lt;br /&gt;
鶏のムネ肉ってパサっとしてしまうので避けがちだけど、そこまでパサつかずで良いかも。&lt;br /&gt;
もしよかったら作ってみてください！&lt;/p&gt;

&lt;h3 id=&quot;鶏ムネ肉とインゲンの中華炒め&quot;&gt;鶏ムネ肉とインゲンの中華炒め&lt;/h3&gt;
&lt;div class=&quot;post-image-center&quot;&gt;
&lt;script src=&quot;https://widgets.cookpad.com/recipes/5461774.js?k=f1117d29&amp;amp;fit_width=1&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h3 id=&quot;鶏ムネ肉のブラックペッパー中華炒め&quot;&gt;鶏ムネ肉のブラックペッパー中華炒め&lt;/h3&gt;
&lt;div class=&quot;post-image-center&quot;&gt;
&lt;script src=&quot;https://widgets.cookpad.com/recipes/5461810.js?k=d819bc4f&amp;amp;fit_width=1&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h3 id=&quot;鶏モモ肉のオイスターソースの中華炒め&quot;&gt;鶏モモ肉のオイスターソースの中華炒め&lt;/h3&gt;
&lt;div class=&quot;post-image-center&quot;&gt;
&lt;script src=&quot;https://widgets.cookpad.com/recipes/5461081.js?k=87e2cd10&amp;amp;fit_width=1&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;/div&gt;</content><category term="Cookpad" /><category term="料理" /><summary></summary></entry><entry><title>2018年最終日</title><link href="https://ryoyakawai.com/blog/2018/12/31/endof2018.html" rel="alternate" type="text/html" title="2018年最終日" /><published>2018-12-31T16:30:00+09:00</published><updated>2018-12-31T16:30:00+09:00</updated><id>https://ryoyakawai.com/blog/2018/12/31/endof2018</id><content type="html" xml:base="https://ryoyakawai.com/blog/2018/12/31/endof2018.html">&lt;div&gt; &lt;/div&gt;

&lt;p&gt;2018年も最終日。環境も、自分も動いた、動かした1年。お疲れ様でした！！&lt;br /&gt;
転職、というのが一番大きかったけど、ブログを移行したり、FitbitのClock Faceを公開したり、ウェブサイトを最初から作ったり、Cookpadでレシピを公開し始めたり、大きいことから小さなことまでやってたんだな〜、と振り返り中。悩みは多い1年だったけど、よい1年だったかな。体重も維持できてるし。&lt;br /&gt;
来年は今年よりもパフォーマンスが出るように更に精進していこう。&lt;br /&gt;
&lt;br /&gt;
関係ないけど、公開しているClock Faceが300名の方、50カ国で利用してもらえてることが分かった。小さなことだけど、こういうのすごく励みになるね。&lt;br /&gt;
&lt;br /&gt;
本年も多くの方に本当にお世話になりました。ありがとうございました。&lt;br /&gt;
2019年もよろしくおねがいします。&lt;br /&gt;
&lt;br /&gt;
よいお年を！&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;whenever&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myself&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;anything_happen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><category term="年末" /><summary></summary></entry><entry><title>Fitbit OSのClockfaceにAnalyticsを入れてみた</title><link href="https://ryoyakawai.com/blog/2018/12/22/fitbitos3_analytics.html" rel="alternate" type="text/html" title="Fitbit OSのClockfaceにAnalyticsを入れてみた" /><published>2018-12-22T23:00:00+09:00</published><updated>2018-12-22T23:00:00+09:00</updated><id>https://ryoyakawai.com/blog/2018/12/22/fitbitos3_analytics</id><content type="html" xml:base="https://ryoyakawai.com/blog/2018/12/22/fitbitos3_analytics.html">&lt;div&gt; &lt;/div&gt;

&lt;p&gt;2018年4月末くらいに買った&lt;a href=&quot;https://blog.ryoyakawai.com/2018/05/27/fitbit-clockface.html&quot;&gt;Fitbit Versa向けにClockfaceを作って半年&lt;/a&gt;経ちました。
インド、英国、オーストラリア、米国のユーザから「サマータイム入ってね〜！」とか、「タイムゾーン追加して！」とかいろいろと要望いただき、
1つ1つ対処していて、そろそろUX的なツッコミも入るようになりました。なんですが、Fitbitはエコシステムとしてまだインストール数とかの情報の開示を
してもらえないので、どれくらいの方に使ってもらえているのか把握できず、なんとかしたいな〜、と思っていました。&lt;br /&gt;
そこで、単純にAnalyticsを入れてしまいました。&lt;/p&gt;

&lt;h2 id=&quot;導入&quot;&gt;導入&lt;/h2&gt;
&lt;p&gt;1からコード書く必要あるのかも？と思いきや、検索したらズバリなのがありました。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dillpixel/fitbit-google-analytics&quot;&gt;dillpixel/fitbit-google-analytics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fitbit OS上のアプリ向けっぽいのでClockfaceで動くのか？という不安はありましたが、特にハードルなく導入完了してしいました。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;AnalyticsでTracking IDを取得&lt;/li&gt;
  &lt;li&gt;AppとCompanionでimport&lt;/li&gt;
  &lt;li&gt;トラックしたいところで動作させる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;非常に簡単でした。&lt;/p&gt;

&lt;p&gt;これで、どれだけ使われているのか分かる、かな？&lt;br /&gt;
まだレビューですが、リリースできるようになるのを楽しみにしてようと思います。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fitbit-google-analytics/app.js&lt;/code&gt;の&lt;code class=&quot;highlighter-rouge&quot;&gt;debug&lt;/code&gt;をExposeして欲しかったな〜。&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;analytics&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;analytics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;こっちも&lt;code class=&quot;highlighter-rouge&quot;&gt;fitbit-google-analytics/companion.js&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><category term="Fitbit" /><category term="FitbitOS" /><summary></summary></entry><entry><title>「Web Music Developers Meetup ＃3」を開催しました！</title><link href="https://ryoyakawai.com/blog/2018/12/22/webmusicmeetup_3.html" rel="alternate" type="text/html" title="「Web Music Developers Meetup ＃3」を開催しました！" /><published>2018-12-22T00:00:00+09:00</published><updated>2018-12-22T00:00:00+09:00</updated><id>https://ryoyakawai.com/blog/2018/12/22/webmusicmeetup_3</id><content type="html" xml:base="https://ryoyakawai.com/blog/2018/12/22/webmusicmeetup_3.html">&lt;div&gt; &lt;/div&gt;

&lt;p&gt;2018年12月21日に「Web Music Developers Meetup 3」を開催しました。&lt;br /&gt;
20名ほどの参加者の中から、10分のLTが6つ行われ、LT後には質問、ノウハウ等が活発に飛び交う、
楽しく、そして有意義なMeetupになったように思います。
ご参加くださった皆様、そしてLTの準備、発表をしてくださった皆様、お疲れ様でした！！&lt;/p&gt;

&lt;h2 id=&quot;ltの内容の紹介&quot;&gt;LTの内容の紹介&lt;/h2&gt;

&lt;h3 id=&quot;lt-1--toyoshim-さん&quot;&gt;LT-1 : &lt;a href=&quot;https://twitter.com/toyoshim&quot;&gt;@toyoshim&lt;/a&gt; さん&lt;/h3&gt;
&lt;p&gt;Web Audio/MIDIの標準化について＆今後のChromeとWeb Music系のAPIに関して、のお話。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;W3Cの年次会議であるTPACにて話さた内容に関しては、Web Audio V2では現在のAPIよりも低レイヤのAPIをサポーする方向で進むこと、Web MIDI APIに関してはMozillaがFirefoxに実装を行って2019年1月にはリリースする目標感をもっている、という表明があったとのこと。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;W3Cに&lt;a href=&quot;https://www.w3.org/community/audio-comgp/&quot;&gt;Audio Community Group&lt;/a&gt;ができました。Audio WGよりももう少しカジュアルなグループなので気になる方はご参加ください。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Chromeは外部デバイス接続に対してのPermission（「GPS使っていいですか？」みたいダイアログ）は適切な場面で出せるようにする、という方向で進んでいる&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Web MIDI API on Chromeに関しては現状はWeb MIDI APIでSystemExclusiveのメッセージを扱う場合にのみ限定してPermissionの許可が必要であるのが、今後はWeb MIDI APIを利用するときにはメッセージに関わらず必ずユーザに許可を求めるように変更されるだろう。その影響もあり（もちろん世の中的な流れもあるが）、Web MIDI APIが使えるプロトコルはHTTPSのみとなる。Chrome内部的には「SystemExclusiveを使う」というフラグは持ち続けることになるとは思う（今後の話なので未確定）。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;post-image-center&quot;&gt;
&lt;img src=&quot;https://ryoyakawai.com/blog/images/2018/12/20181222_toyoshim.jpg&quot; width=&quot;70%&quot; style=&quot;border:1px solid #eee;&quot; /&gt;
&lt;/div&gt;

&lt;h3 id=&quot;lt-2--gcchaan&quot;&gt;LT-2 : &lt;a href=&quot;https://twitter.com/gcchaan&quot;&gt;@gcchaan&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Web MIDI APIさわってみた、というタイトルでWeb Socketと使ってリモートでMIDI機器を制御してみたお話。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;システムを作ってみて、Web Socketでワリとスピードが出てるから演奏にも使えそうなことが判明した&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ついでに、画面に楽譜に表示された和音を鍵盤から時間内に抑えるゲーム、も作ってみた&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;post-image-center&quot;&gt;
&lt;img src=&quot;https://ryoyakawai.com/blog/images/2018/12/20181222_gcchan.jpg&quot; width=&quot;70%&quot; style=&quot;border:1px solid #eee;&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://amei-music.github.io/CreatorsHub/about.html&quot;&gt;Creators’ Hub&lt;/a&gt;のJSONの形式を使えば、他のアプリとも会話がしやすくなるかも？というアドバイスが会場からありました。&lt;/p&gt;

&lt;h3 id=&quot;lt-3--dorayaki0&quot;&gt;LT-3 : &lt;a href=&quot;https://twitter.com/dorayaki0&quot;&gt;@dorayaki0&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;abc記法（&lt;a href=&quot;https://abcjs.net/&quot;&gt;abc.js&lt;/a&gt;を使って）を使って楽譜をリアルタイムに記入していくアプリケーションのお話。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://scrapbox.io/business&quot;&gt;Scrapbox&lt;/a&gt;上でChrome Extentionと動く&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://scrapbox.io/satakebox/hyperscorebox&quot;&gt;hyperscoreboxの説明ページ&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;post-image-center&quot;&gt;
&lt;img src=&quot;https://ryoyakawai.com/blog/images/2018/12/20181222_dorayaki0.jpg&quot; width=&quot;70%&quot; style=&quot;border:1px solid #eee;&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;楽譜をリアルタイムに鳴らしたいけど実現が難しい・・・という@dorayaki0さんの悩みに対し、会場から「ExtentionならBackground Pageを作ってそこにEvent投げたらいけそう」という解決策が出されていました。&lt;/p&gt;

&lt;h3 id=&quot;lt-4--sasacci&quot;&gt;LT-4 : &lt;a href=&quot;https://twitter.com/sasacci&quot;&gt;@sasacci&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;「BLE MIDI on Web Bluetooth」と「VJで家の設計図をグリグリ回した」という2本立てのお話。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Web BluetoothでBLE MIDIのChracteristicに&lt;code class=&quot;highlighter-rouge&quot;&gt;7772E5DB-3868-4112-A1A9-F2669D&lt;/code&gt;、Serviceに&lt;code class=&quot;highlighter-rouge&quot;&gt;03B80E5A-EDE8-4B33-A751-6CE34EC4C700&lt;/code&gt;を指定したらウェブブラウザとBLE MIDI機器とを簡単に接続できる（Macだけかも）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Web BluetoothはBLE MIDIとして接続されるだけなので、受け取ったメッセージはParseする必要がある&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;VJ仲間の方のご自宅が3DデータであったのでThree.jsで扱って、VJ素材としてグリグリ回した話&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;post-image-center&quot;&gt;
&lt;img src=&quot;https://ryoyakawai.com/blog/images/2018/12/20181222_sasacci.jpg&quot; width=&quot;70%&quot; style=&quot;border:1px solid #eee;&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Roland社の&lt;a href=&quot;https://www.roland.com/jp/products/aerophone_go/&quot;&gt;Aerophone GO&lt;/a&gt;を持ち込んでのBLE MIDI on Web Bluetoothのお話で、写真は16進数のMIDIメッセージをネタに会場とやり取りをしているところ。&lt;/p&gt;

&lt;h3 id=&quot;lt-5--tadfmac&quot;&gt;LT-5 : &lt;a href=&quot;https://twitter.com/tadfmac&quot;&gt;@tadfmac&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;簡単にIoT機器作りたいじゃん、というお話。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;簡単にIoT機器を作るにはMIDIで有線接続がいいぞ！&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MIDI機器を作るには&lt;a href=&quot;https://github.com/kuwatay/mocolufa&quot;&gt;mocolufa&lt;/a&gt;がいいぞ！&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;UI作るならブラウザがいいぞ！ブラウザはChromeでしょ。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;post-image-center&quot;&gt;
&lt;img src=&quot;https://ryoyakawai.com/blog/images/2018/12/20181222_tadfmac.jpg&quot; width=&quot;70%&quot; style=&quot;border:1px solid #eee;&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;途中からディスプレイが映らなくなるというトラブルがありました。&lt;/p&gt;

&lt;h3 id=&quot;lt-6--xsoundjs&quot;&gt;LT-6 : &lt;a href=&quot;https://twitter.com/xsoundjs&quot;&gt;@xsoundjs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;MediaElementAudioSourceNodeと映像フォーマットのお話。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;普段は自己紹介しないけど今回は関連するのでしちゃいます！↓&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/video-dev/hls.js/&quot;&gt;hls.js&lt;/a&gt;のComitterしてます！&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;MediaElementAudioSourceNodeで音を横取りして加工できる。&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;横取りすると映像とズレが生じることがある。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MediaElementAudioSourceNodeを使うと、その瞬間にVideo Element側の音はMuteされる。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;MediaElementAudioSourceNodeは現状ではChrome限定っぽい？&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;post-image-center&quot;&gt;
&lt;img src=&quot;https://ryoyakawai.com/blog/images/2018/12/20181222_xsoundjs.jpg&quot; width=&quot;70%&quot; style=&quot;border:1px solid #eee;&quot; /&gt;
&lt;/div&gt;

&lt;h2 id=&quot;スポンサー&quot;&gt;スポンサー&lt;/h2&gt;
&lt;p&gt;今回のMeetupは私の現所属である&lt;a href=&quot;https://www.digitalhearts.com/&quot;&gt;&lt;strong&gt;株式会社デジタルハーツ&lt;/strong&gt;&lt;/a&gt;にスポンサーをしていただききました。飲み物、ピザを提供いただきリラックスした形のMeetupすることができました。サポートしてくださった皆様に心から感謝を申し上げます。&lt;br /&gt;
ありがとうございました！&lt;/p&gt;

&lt;div class=&quot;post-image-center&quot;&gt;
&lt;img src=&quot;https://ryoyakawai.com/blog/images/2018/12/20181222_digitalhearts.jpg&quot; width=&quot;70%&quot; style=&quot;border:1px solid #eee;&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;なお、IT系の勉強会、Meetupに対して、会場のご提供が可能なケースもるかもしれませんので、そのときはご相談ください。&lt;/p&gt;

&lt;h2 id=&quot;おわりに&quot;&gt;おわりに&lt;/h2&gt;
&lt;p&gt;不定期にこんな形のMeetupを開催していく予定です。&lt;br /&gt;
これからの Web について真剣に議論する&lt;a href=&quot;https://nextwebconf.connpass.com/event/103056/&quot;&gt;「次世代 Web カンファレンス」&lt;/a&gt;のWebMusic(#nwc_music)のセッションがあります。そちらもお楽しみに！&lt;/p&gt;

&lt;h2 id=&quot;リンク&quot;&gt;リンク&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.webmusic.io/&quot;&gt;Web Music Developers JP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://connpass.com/event/112300/&quot;&gt;Web Music Developers Meetup #3 - Connpass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Web Music" /><category term="Web Music Developers JP" /><category term="Web Audio API" /><category term="Web MIDI API" /><summary></summary></entry></feed>
